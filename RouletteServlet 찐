package com.jeommechu.web.game;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.List;
import java.util.stream.Collectors;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.jeommechu.menu.lunch.LunchDAO;
import com.jeommechu.menu.lunch.LunchVO;

public class RouletteServlet extends HttpServlet {

    private LunchDAO lunchDAO;

    @Override
    public void init() throws ServletException {
        super.init();
        lunchDAO = new LunchDAO(); // LunchDAO 인스턴스를 초기화합니다
    }

    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        List<LunchVO> lunches;
        try {
            lunches = lunchDAO.getAllLunches(); // 모든 점심 메뉴 데이터를 가져옵니다
        } catch (SQLException e) {
            throw new ServletException("Error retrieving lunch items", e);
        }

        // 음식 이름 리스트를 추출합니다
        List<String> menuList = lunches.stream()
                                       .map(LunchVO::getFoodName)
                                       .collect(Collectors.toList());

        // 메뉴의 개수가 10개를 초과할 경우, 10개로 제한합니다
        if (menuList.size() > 10) {
            menuList = menuList.subList(0, 10);
        }

        response.setContentType("text/html;charset=UTF-8");
        PrintWriter out = response.getWriter();

        // HTML 및 JavaScript 코드 작성
        out.println("<!DOCTYPE html>");
        out.println("<html lang='ko'>");
        out.println("<head>");
        out.println("    <meta charset='UTF-8'>");
        out.println("    <meta name='viewport' content='width=device-width, initial-scale=1.0'>");
        out.println("    <title>점메추 - 룰렛</title>");
        out.println("    <link rel='stylesheet' href='https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap'>");
        out.println("    <style>");
        out.println("        html, body, button { font-family: 'Poppins', sans-serif; }"); // 폰트 변경
        out.println("        body { background-color: #f9f9f9; }"); // 배경색
        out.println("        button { border: 0; margin: 0; padding: 0; }");
        out.println("        .title { margin-top: 50px; text-align: center; font-size: 36px; font-weight: bold; color: #333; }");
        out.println("        .box-roulette { position: relative; margin: 50px auto; width: 500px; height: 500px; border-radius: 50%; background: #fff; overflow: hidden; border: 5px solid #ddd; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); }");
        out.println("        .section { position: absolute; width: 50%; height: 50%; transform-origin: 100% 100%; clip-path: polygon(100% 100%, 0% 100%, 0% 0%); display: flex; justify-content: center; align-items: center; text-align: center; }");
        out.println("        .section span { display: block; transform: rotate(-90deg); font-size: 14px; font-weight: bold; color: #333; }");
        out.println("        #result { text-align: center; margin-top: 20px; font-size: 24px; font-weight: bold; color: #333; }"); // 수정된 텍스트 색상
        out.println("        #btn-start { display: block; position: absolute; left: 50%; top: 50%; margin: -50px 0 0 -50px; width: 100px; height: 100px; font-weight: bold; background: #fff; border-radius: 50px; z-index: 9999; cursor: pointer; border: 2px solid #007bff; color: #007bff; }");
        out.println("        #menu-btn { display: block; margin: 20px auto; width: 150px; height: 40px; font-weight: bold; background: #007bff; color: #fff; border: none; border-radius: 5px; cursor: pointer; text-align: center; line-height: 40px; }");
        out.println("        #error { text-align: center; margin-top: 20px; font-size: 18px; font-weight: bold; color: #e74c3c; }"); // 오류 메시지 색상

        // 화살표 스타일 추가
        out.println("        .arrow {");
        out.println("            position: absolute;");
        out.println("            top: 10px;");
        out.println("            left: 50%;");
        out.println("            margin-left: -15px;");
        out.println("            width: 0;");
        out.println("            height: 0;");
        out.println("            border-left: 15px solid transparent;");
        out.println("            border-right: 15px solid transparent;");
        out.println("            border-bottom: 30px solid red;");
        out.println("            z-index: 10000;"); // 화살표가 가장 앞에 오도록 설정
        out.println("        }");

        out.println("    </style>");
        out.println("</head>");
        out.println("<body>");
        out.println("    <p class='title'>점메추</p>");
        out.println("    <div class='box-roulette' id='roulette'>");

        // 얇은 화살표 추가
        out.println("    <div class='arrow'></div>");

        if (menuList.size() >= 10) {
            // 10개 구역을 정확히 등분하여 배치
            double anglePerSection = 360.0 / 10;
            for (int i = 0; i < 10; i++) {
                double angle = i * anglePerSection;
                // 텍스트가 각 섹션에 맞게 회전
                double textRotation = -angle + 18; // 텍스트의 위치와 회전을 조정

                out.println("        <div class='section' style='transform: rotate(" + angle + "deg); background-color: " + getColorForSection(i) + ";'>");
                out.println("            <span style='transform: rotate(" + textRotation + "deg);'>" + menuList.get(i) + "</span>");
                out.println("        </div>");
            }
        }

        out.println("        <button type='button' id='btn-start'>돌려 돌려<br>돌림판</button>");
        out.println("    </div>");
        out.println("    <div id='result'>오늘 점심은?</div>");
        out.println("    <button id='menu-btn' onclick='goToAddMenu()'>메뉴 추가하기</button>");
        if (menuList.size() < 10) {
            out.println("    <div id='error'>10개 미만입니다.</div>");
        }
        out.println("    <script src='https://code.jquery.com/jquery-3.6.3.min.js'></script>");
        out.println("    <script src='https://cdn.rawgit.com/wilq32/jqueryrotate/master/jQueryRotateCompressed.js'></script>");
        out.println("    <script>");
        out.println("        function goToAddMenu() {");
        out.println("            window.location.href = 'http://localhost:8080/jeommechu/getLunches';");
        out.println("        }");
        out.println("        $(document).ready(function() {");
        out.println("            if (" + menuList.size() + " >= 10) {");
        out.println("                $('#btn-start').on('click', function() {");
        out.println("                    var randomDegree = Math.floor(Math.random() * 360);");
        out.println("                    $('#roulette').rotate({");
        out.println("                        angle: 0,");
        out.println("                        animateTo: randomDegree + 1800,");
        out.println("                        duration: 5000,");
        out.println("                        callback: function() {");
        out.println("                            var selectedIndex = Math.floor((randomDegree % 360) / 36);");
        out.println("                            $('#result').text('오늘의 점심은 ' + menuList[selectedIndex]);");
        out.println("                        }");
        out.println("                    });");
        out.println("                });");
        out.println("            }");
        out.println("        });");
        out.println("    </script>");
        out.println("</body>");
        out.println("</html>");
    }

    // 각 섹션에 사용할 배경색을 반환하는 메소드
    private String getColorForSection(int index) {
        String[] colors = { "#f44336", "#e91e63", "#9c27b0", "#673ab7", "#3f51b5", "#2196f3", "#03a9f4", "#00bcd4", "#009688", "#4caf50" };
        return colors[index % colors.length];
    }
}
